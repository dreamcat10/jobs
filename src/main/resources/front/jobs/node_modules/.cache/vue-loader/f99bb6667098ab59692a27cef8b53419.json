{"remainingRequest":"D:\\H5\\project\\HBuilderProjects\\jobs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\H5\\project\\HBuilderProjects\\jobs\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\H5\\project\\HBuilderProjects\\jobs\\src\\App.vue","mtime":1678174877673},{"path":"D:\\H5\\project\\HBuilderProjects\\jobs\\node_modules\\css-loader\\index.js","mtime":1673771963705},{"path":"D:\\H5\\project\\HBuilderProjects\\jobs\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1673772000062},{"path":"D:\\H5\\project\\HBuilderProjects\\jobs\\node_modules\\postcss-loader\\src\\index.js","mtime":1673772003590},{"path":"D:\\H5\\project\\HBuilderProjects\\jobs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673771979702},{"path":"D:\\H5\\project\\HBuilderProjects\\jobs\\node_modules\\vue-loader\\lib\\index.js","mtime":1673772000036}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"./assets/css/font.css\";\n@import \"./assets/css/global.css\";\nbody{\n\theight: 100vh;\n\tmargin: 0;\n}\n\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <keep-alive>\r\n        <router-view />\r\n </keep-alive>\n</template>\n\n<script>\r\nimport {chatRooms} from \"@/network/chat.js\"\r\nimport {createWebSocket} from \"@/api/websocket.js\"\r\n\nexport default {\n  name: 'app',\r\n  created() {\r\n\t let emp = sessionStorage.getItem(\"empInfo\")\r\n  \tif(emp != null){\r\n\t    emp = JSON.parse(emp);\r\n\t\tcreateWebSocket(this.callback, emp.id)\r\n\t\tconsole.log(1)\r\n\t\tthis.chat(emp.id)\r\n\t}\r\n  },\r\n\r\n  data(){\r\n\t  return{\r\n\t\t  logMap: [],\r\n\t  }\r\n  },\n  methods: {\n\t  callback(msg){\r\n\t\tthis.logMap = this.$store.getters.getLogs\r\n\t\tthis.logMap.map(item => {\r\n\t\t\tif(msg.chatRoomId == item.roomId){\r\n\t\t\t\titem.logs.push(msg)\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.$store.commit('SET_CHATLOGS',this.logMap);\r\n\t  },\r\n\t  chat(id){\r\n\t\tchatRooms(id).then(res => {\r\n\t\t\tlet data = res.data\r\n\t\t\tif(data.code == 200){\r\n\t\t\t\tlet rooms = data.data\r\n\t\t\t\tthis.$store.commit('SET_CHATROOMS',rooms);\r\n\t\t\t\trooms.map(item => {\r\n\t\t\t\t\tlet log = {\r\n\t\t\t\t\t\troomId: '',\r\n\t\t\t\t\t\tlogs: []\r\n\t\t\t\t\t};\r\n\t\t\t\t\tlog.roomId = item.id,\r\n\t\t\t\t\tlog.logs = []\r\n\t\t\t\t\tthis.logMap.push(log)\r\n\t\t\t\t})\r\n\t\t\t\tthis.$store.commit('SET_CHATLOGS',this.logMap);\r\n\t\t\t}else{\r\n\t\t\t\tconsole.log(\"获取聊天室信息失败\")\r\n\t\t\t}\r\n\t\t})\r\n\t  },\n  }\n}\n</script>\n\n<style>\r\n\t@import \"./assets/css/font.css\";\r\n\t@import \"./assets/css/global.css\";\r\n\tbody{\r\n\t\theight: 100vh;\r\n\t\tmargin: 0;\r\n\t}\r\n\t\n</style>\n\n"]}]}