{"remainingRequest":"D:\\H5\\project\\HBuilderProjects\\jobs\\node_modules\\babel-loader\\lib\\index.js!D:\\H5\\project\\HBuilderProjects\\jobs\\src\\network\\request.js","dependencies":[{"path":"D:\\H5\\project\\HBuilderProjects\\jobs\\src\\network\\request.js","mtime":1676529668631},{"path":"D:\\H5\\project\\HBuilderProjects\\jobs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673771979702},{"path":"D:\\H5\\project\\HBuilderProjects\\jobs\\node_modules\\babel-loader\\lib\\index.js","mtime":1673772004305}],"contextDependencies":[],"result":["import axios from 'axios';\nexport function request(config) {\n  var instance = new axios.create({\n    // baseURL: 'http://120.77.203.139:80/api',\n    baseURL: 'http://localhost:8081/api',\n    timeout: 5000\n  });\n  instance.interceptors.request.use(function (config) {\n    return config;\n  }, function (err) {});\n  instance.interceptors.response.use(function (res) {\n    return res;\n  }, function (err) {});\n  return instance(config);\n}",{"version":3,"sources":["D:\\H5\\project\\HBuilderProjects\\jobs\\src\\network\\request.js"],"names":["axios","request","config","instance","create","baseURL","timeout","interceptors","use","err","response","res"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAwB;AAC3B,MAAMC,QAAQ,GAAG,IAAIH,KAAK,CAACI,MAAV,CAAiB;AAChC;AACAC,IAAAA,OAAO,EAAE,2BAFuB;AAGhCC,IAAAA,OAAO,EAAE;AAHuB,GAAjB,CAAjB;AAKFH,EAAAA,QAAQ,CAACI,YAAT,CAAsBN,OAAtB,CAA8BO,GAA9B,CAAkC,UAAAN,MAAM,EAAI;AAC1C,WAAOA,MAAP;AACD,GAFD,EAGE,UAAAO,GAAG,EAAI,CAEN,CALH;AAMAN,EAAAA,QAAQ,CAACI,YAAT,CAAsBG,QAAtB,CAA+BF,GAA/B,CAAmC,UAAAG,GAAG,EAAG;AACvC,WAAOA,GAAP;AACD,GAFD,EAGE,UAAAF,GAAG,EAAI,CAEN,CALH;AAMA,SAAON,QAAQ,CAACD,MAAD,CAAf;AACD","sourcesContent":["import axios from 'axios'\nexport function request(config){\n    const instance = new axios.create({\n      // baseURL: 'http://120.77.203.139:80/api',\r\n      baseURL: 'http://localhost:8081/api',\n      timeout: 5000\n    })\n  instance.interceptors.request.use(config => {\n    return config\n  },\n    err => {\n\n    })\n  instance.interceptors.response.use(res =>{\n    return res\n  },\n    err => {\n\n    })\n  return instance(config)\n}\n"]}]}