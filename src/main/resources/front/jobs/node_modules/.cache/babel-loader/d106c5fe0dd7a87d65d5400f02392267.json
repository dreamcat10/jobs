{"remainingRequest":"D:\\H5\\project\\HBuilderProjects\\jobs\\node_modules\\babel-loader\\lib\\index.js!D:\\H5\\project\\HBuilderProjects\\jobs\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\H5\\project\\HBuilderProjects\\jobs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\H5\\project\\HBuilderProjects\\jobs\\src\\components\\content\\news\\ChatRoom.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\H5\\project\\HBuilderProjects\\jobs\\src\\components\\content\\news\\ChatRoom.vue","mtime":1678102071236},{"path":"D:\\H5\\project\\HBuilderProjects\\jobs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673771979702},{"path":"D:\\H5\\project\\HBuilderProjects\\jobs\\node_modules\\babel-loader\\lib\\index.js","mtime":1673772004305},{"path":"D:\\H5\\project\\HBuilderProjects\\jobs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673771979702},{"path":"D:\\H5\\project\\HBuilderProjects\\jobs\\node_modules\\vue-loader\\lib\\index.js","mtime":1673772000036}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _objectSpread from \"D:\\\\H5\\\\project\\\\HBuilderProjects\\\\jobs\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapState, mapActions } from 'vuex';\nimport { chatLogs } from '@/network/chat.js';\nimport { sendSock } from '@/api/websocket.js';\nexport default {\n  name: 'ChatRoom',\n  data: function data() {\n    return {\n      context: '',\n      page: 1,\n      total: 1,\n      size: 1,\n      dbLogs: [],\n      //离线前接收的消息\n      list: [],\n      isLoading: false,\n      scrollFlag: true,\n      lastScrollHeight: ''\n    };\n  },\n  props: {\n    room: {\n      type: Object\n    }\n  },\n  computed: _objectSpread({}, mapState(['chatLogs', 'empInfo']), {\n    logList: function logList() {\n      var _this = this;\n\n      //离线后接收的消息\n      var logs = [];\n\n      if (this.chatLogs != null) {\n        this.chatLogs.forEach(function (item) {\n          if (item.roomId == _this.room.id) {\n            logs = item.logs;\n\n            _this.removeLog();\n          }\n        });\n        this.scrollFlag = true;\n      }\n\n      return logs;\n    },\n    MaxPage: function MaxPage() {\n      return Math.ceil(this.total / this.size);\n    },\n    isShow: function isShow() {\n      return this.page > this.MaxPage && this.$refs.chatLogList.scrollHeight > 600;\n    },\n    concatList: {\n      get: function get() {\n        var logs = this.list;\n        this.dbLogs.forEach(function (item) {\n          logs.unshift(item);\n        });\n        this.dbLogs = [];\n        logs = logs.concat(this.logList);\n        this.list = logs;\n        return logs;\n      }\n    }\n  }),\n  watch: {\n    room: function room(val) {\n      this.getChatLogs();\n    }\n  },\n  activated: function activated() {\n    this.$refs.chatLogList.scrollTop = this.$refs.chatLogList.scrollHeight;\n  },\n  mounted: function mounted() {\n    if (this.room.id != null) {\n      this.getChatLogs();\n    }\n\n    if (this.scrollFlag) {\n      console.log('bottom');\n      this.$refs.chatLogList.scrollTop = this.$refs.chatLogList.scrollHeight;\n    }\n  },\n  updated: function updated() {\n    if (this.scrollFlag) {\n      this.scrollToBottom();\n    } else {\n      this.scrollUnchange();\n    }\n  },\n  methods: {\n    //发送消息\n    send: function send(val) {\n      this.context = '';\n      var context = JSON.stringify(val);\n      var msg = '{\"toId\":\"' + this.room.otherId + '\",\"contentText\":' + context + ',\"roomId\":\"' + this.room.id + '\"}';\n      sendSock(msg);\n      console.log(msg);\n    },\n    scrollEvent: function scrollEvent(e) {\n      var _this2 = this;\n\n      if (e.srcElement.scrollTop == 0 && this.page <= this.MaxPage) {\n        this.lastScrollHeight = e.srcElement.scrollHeight;\n        setTimeout(function () {\n          _this2.getHistory();\n        }, 500);\n      }\n    },\n    removeLog: function removeLog() {\n      this.$store.commit('REMOVE_LOGS', this.room.id);\n    },\n    //滚动条保持最底部方法\n    scrollToBottom: function scrollToBottom() {\n      var _this3 = this;\n\n      this.$nextTick(function () {\n        //回到底部需要滚动的长度\n        var top = _this3.$refs.chatLogList.scrollHeight - _this3.$refs.chatLogList.scrollTop; // 实现滚动效果 \t\t\t  \n\n        var timeTop = setInterval(function () {\n          _this3.$refs.chatLogList.scrollTop += 80;\n          top -= 50;\n\n          if (top <= 0) {\n            clearInterval(timeTop); //清除定时器\n          }\n        }, 10);\n      });\n    },\n    //页面保持原位置\n    scrollUnchange: function scrollUnchange() {\n      var _this4 = this;\n\n      this.$nextTick(function () {\n        _this4.$refs.chatLogList.scrollTop = _this4.$refs.chatLogList.scrollHeight - _this4.lastScrollHeight + 80;\n      });\n    },\n    getHistory: function getHistory() {\n      this.isLoading = true;\n      this.scrollFlag = false;\n      this.getChatLogs();\n    },\n    getChatLogs: function getChatLogs() {\n      var _this5 = this;\n\n      chatLogs(this.room.id, this.page).then(function (res) {\n        console.log(res.data);\n        var data = res.data;\n\n        if (data.code == 200) {\n          _this5.dbLogs = data.data.recodes;\n          _this5.total = data.data.total;\n          _this5.size = data.data.size;\n          _this5.page += 1;\n          setTimeout(function () {\n            _this5.isLoading = false;\n          }, 500);\n          console.log('page,max', _this5.page, _this5.MaxPage);\n        }\n      }).catch(function (err) {\n        _this5.$message({\n          type: 'error',\n          message: '网络异常，请稍后重试！！！'\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["ChatRoom.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\t<div class=\"chat-room\">\r\n\t\t<div class=\"chat-list\" >\r\n\t\t\t<ul class=\"ul-scroll\" ref=\"chatLogList\" @scroll=\"scrollEvent\">\r\n\t\t\t\t<li v-show=\"page <= MaxPage\" style=\"height: 80px;\">\r\n\t\t\t\t\t<el-button type=\"text\" icon=\"el-icon-time\" :loading=\"isLoading\" @click=\"getHistory()\">点击查看更多消息</el-button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li v-show=\"isShow\" style=\"height: 80px;\">\r\n\t\t\t\t\t<el-button type=\"text\" @click=\"scrollToBottom()\">点击返回底部</el-button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li class=\"ul-scroll-item\" v-for=\"item in concatList\">\r\n\t\t\t\t\t<div class=\"log-item-left\" v-if=\"item.fromId == room.otherId\">\r\n\t\t\t\t\t\t<el-avatar :size=\"50\" :src=\"room.oAvatar\"></el-avatar>\r\n\t\t\t\t\t\t<div class=\"log-detail-left\" v-html=\"item.context.replace(/\\\\n/g, '<br/>')\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"log-item-right\" v-else =\"item.fromId != room.otherId\">\r\n\t\t\t\t\t\t<div style=\"display: flex; margin-left: auto;\">\r\n\t\t\t\t\t\t\t<div class=\"log-detail-right\">\r\n\t\t\t\t\t\t\t\t<span v-html=\"item.context.replace(/\\\\n/g, '<br/>')\"></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<el-avatar :size=\"50\" :src=\"empInfo.avatar\"></el-avatar>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li style=\"height: 20px;\"></li>\r\n\t\t\t</ul>\r\n\t\t\t<el-backtop target=\"ul.ul-scroll\" :bottom=\"162\" :right=\"165\" style=\"width: 20px; height: 20px;\"></el-backtop>\r\n\t\t</div>\r\n\t\t<div class=\"chat-text\">\r\n\t\t\t<textarea @keyup.enter=\"send(context)\" v-model=\"context\"></textarea>\r\n\t\t\t<el-button type=\"primary\" class=\"text-btu\" @click=\"send(context)\">发送</el-button>\r\n\t\t</div>\r\n\t</div>\n</template>\n\n<script>\r\n\timport { mapGetters, mapState, mapActions } from 'vuex'\r\n\timport {chatLogs} from'@/network/chat.js'\r\n\timport {sendSock} from '@/api/websocket.js'\r\n\t\r\n\texport default{\r\n\t\tname:'ChatRoom',\r\n\t\tdata(){\r\n\t\t\treturn{\r\n\t\t\t\tcontext: '',\r\n\t\t\t\tpage: 1,\r\n\t\t\t\ttotal: 1,\r\n\t\t\t\tsize: 1,\r\n\t\t\t\tdbLogs: [], //离线前接收的消息\r\n\t\t\t\tlist: [],\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tscrollFlag: true,\r\n\t\t\t\tlastScrollHeight: ''\r\n\t\t\t}\r\n\t\t},\r\n\t\tprops:{\r\n\t\t\troom: {\r\n\t\t\t\ttype: Object\r\n\t\t\t},\r\n\t\t},\r\n\t\tcomputed:{\r\n\t\t\t...mapState(['chatLogs','empInfo']),\t\t\r\n\t\t\tlogList(){ //离线后接收的消息\r\n\t\t\t\tlet logs = []\r\n\t\t\t\tif(this.chatLogs != null){\r\n\t\t\t\t\tthis.chatLogs.forEach(item =>{\r\n\t\t\t\t\t\tif(item.roomId == this.room.id){\r\n\t\t\t\t\t\t\tlogs = item.logs;\r\n\t\t\t\t\t\t\tthis.removeLog()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.scrollFlag = true\r\n\t\t\t\t}\r\n\t\t\t\treturn logs\r\n\t\t\t},\r\n\t\t\tMaxPage(){\r\n\t\t\t\treturn Math.ceil(this.total / this.size); \r\n\t\t\t},\r\n\t\t\tisShow(){\r\n\t\t\t\treturn this.page >this.MaxPage && this.$refs.chatLogList.scrollHeight > 600\r\n\t\t\t},\r\n\t\t\tconcatList: {\r\n\t\t\t\tget(){\t\t\t\t\t\r\n\t\t\t\t\tlet logs = this.list\r\n\t\t\t\t\tthis.dbLogs.forEach(item => {\r\n\t\t\t\t\t\tlogs.unshift(item)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.dbLogs = []\r\n\t\t\t\t\tlogs = logs.concat(this.logList)\r\n\t\t\t\t\tthis.list = logs\r\n\t\t\t\t\treturn logs\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\r\n\t\t},\r\n\t\twatch:{\t\r\n\t\t\troom(val){\r\n\t\t\t\tthis.getChatLogs()\t\t\t\t\r\n\t\t\t},\r\n\t\t},\r\n\t\tactivated() {\r\n\t\t\tthis.$refs.chatLogList.scrollTop = this.$refs.chatLogList.scrollHeight \r\n\t\t},\r\n\t\tmounted() {\t\t\r\n\t\t\tif(this.room.id != null){\r\n\t\t\t\tthis.getChatLogs()\r\n\t\t\t}\r\n\t\t\tif(this.scrollFlag){\r\n\t\t\t\tconsole.log('bottom')\r\n\t\t\t\tthis.$refs.chatLogList.scrollTop = this.$refs.chatLogList.scrollHeight\r\n\t\t\t}\r\n\t\t},\r\n\t\tupdated() {\r\n\t\t\tif(this.scrollFlag){\r\n\t\t\t\tthis.scrollToBottom()\r\n\t\t\t}else{\r\n\t\t\t\tthis.scrollUnchange()\r\n\t\t\t}\t\t\r\n\t\t},\r\n\t\t\r\n\t\tmethods:{\r\n\t\t\t//发送消息\r\n\t\t\tsend(val){\r\n\t\t\t\tthis.context = ''\r\n\t\t\t\tlet context = JSON.stringify(val)\r\n\t\t\t\tlet msg = '{\"toId\":\"'+ this.room.otherId +'\",\"contentText\":'+ context +',\"roomId\":\"'+ this.room.id +'\"}'\r\n\t\t\t\tsendSock(msg)\r\n\t\t\t\tconsole.log(msg)\r\n\t\t\t},\r\n\t\t\tscrollEvent(e){\r\n\t\t\t\tif(e.srcElement.scrollTop == 0 && this.page <= this.MaxPage){\r\n\t\t\t\t\tthis.lastScrollHeight = e.srcElement.scrollHeight\r\n\t\t\t\t\tsetTimeout(() =>{\r\n\t\t\t\t\t\tthis.getHistory()\r\n\t\t\t\t\t},500)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tremoveLog(){\r\n\t\t\t\tthis.$store.commit('REMOVE_LOGS',this.room.id)\r\n\t\t\t},\r\n\t\t\t//滚动条保持最底部方法\r\n\t\t\tscrollToBottom () {\r\n\t\t\t  this.$nextTick(() => {\r\n\t\t\t\t  //回到底部需要滚动的长度\r\n\t\t\t\t\tlet top = this.$refs.chatLogList.scrollHeight - this.$refs.chatLogList.scrollTop\r\n\t\t\t  \r\n\t\t\t\t\t// 实现滚动效果 \t\t\t  \r\n\t\t\t\t\tconst timeTop = setInterval(() => {\t\t\t  \r\n\t\t\t\t\t  this.$refs.chatLogList.scrollTop += 80;  \r\n\t\t\t\t\t  top -= 50;\r\n\t\t\t\t\t  if (top <= 0) {\t\t  \r\n\t\t\t\t\t\tclearInterval(timeTop); //清除定时器\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t}, 10);\r\n\t\t\t  })\r\n\t\t\t},\r\n\t\t\t//页面保持原位置\r\n\t\t\tscrollUnchange () {\r\n\t\t\t  this.$nextTick(() => {\r\n\t\t\t\t  this.$refs.chatLogList.scrollTop = this.$refs.chatLogList.scrollHeight - this.lastScrollHeight + 80\r\n\t\t\t  })\r\n\t\t\t},\r\n\t\t\tgetHistory(){\r\n\t\t\t\tthis.isLoading = true\r\n\t\t\t\tthis.scrollFlag = false\r\n\t\t\t\tthis.getChatLogs()\r\n\t\t\t},\r\n\t\t\tgetChatLogs(){\r\n\t\t\t\tchatLogs(this.room.id, this.page).then(res => {\r\n\t\t\t\t\tconsole.log(res.data)\r\n\t\t\t\t\tlet data = res.data\r\n\t\t\t\t\tif(data.code == 200){\r\n\t\t\t\t\t\tthis.dbLogs = data.data.recodes\r\n\t\t\t\t\t\tthis.total = data.data.total\r\n\t\t\t\t\t\tthis.size = data.data.size\r\n\t\t\t\t\t\tthis.page += 1\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tthis.isLoading = false\r\n\t\t\t\t\t\t},500)\r\n\t\t\t\t\t\tconsole.log('page,max',this.page,this.MaxPage)\r\n\t\t\t\t\t}\r\n\t\t\t\t}).catch(err => {\r\n\t\t\t\t\tthis.$message({\r\n\t\t\t\t\t  type: 'error',\r\n\t\t\t\t\t  message: '网络异常，请稍后重试！！！'\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t}\r\n\t}\n</script>\n\n<style>\r\n\t .text-btu{\r\n\t\tposition: absolute;\r\n\t\tbottom: 5px;\r\n\t\tright: 100px;\r\n\t}\r\n\t  textarea {\r\n\t    box-sizing: border-box;\r\n\t    padding: 10px 30px 0 30px ;\r\n\t    height: 110px;\r\n\t    width: 100%;\r\n\t    border: none;\r\n\t    outline: none;\r\n\t    font-family: 'Micrsofot Yahei';\r\n\t    resize: none;\r\n\t\tvertical-align: top; \r\n\t\tbackground-color: #F9FAFD;\r\n\t  }\r\n\r\n\t.chat-room{\r\n\t\theight: 100%;\r\n\t}\r\n\t.chat-list{\r\n\t\tbox-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1)\r\n\t}\r\n\t.ul-scroll{\r\n\t\tlist-style: none;\r\n\t\tmargin: 0px;\r\n\t\tpadding: 0;\r\n\t\toverflow: auto;\r\n\t\tdisplay: inline-block;\r\n\t\twhite-space: nowrap;\r\n\t\theight: 100%; \r\n\t\twidth: 100%;\r\n\t\tbackground: #F9FAFD;\r\n\t\tborder-radius: 5px;\r\n\t}\r\n\t.ul-scroll-item{\r\n\t\twidth: 100%;\r\n\t}\r\n\t.log-item-left{\r\n\t\tdisplay: flex;\r\n\t\twidth: 100%;\r\n\t}\r\n\t.log-item-right{\r\n\t\tdisplay: flex;\r\n\t\twidth: 100%;\r\n\t}\r\n\t.log-detail-left {\r\n\t\tbackground-color: #e5e5e5;\r\n\t\tborder-radius: 4px;\r\n\t\tposition: relative;\r\n\t\tmargin-top: 54px;\r\n\t\tmargin-left: 10px;\r\n\t\tpadding: 10px;\r\n\t\ttext-align: left;\r\n\t}\r\n\t.log-detail-left::after{\r\n\t\tcontent: '';\r\n\t\tborder-top: 30px solid #e5e5e5;\r\n\t\tborder-right: 15px solid transparent;\r\n\t\ttransform: rotate(113deg);\r\n\t\tposition: absolute;\r\n\t\ttop: 0px;\r\n\t\tleft: -16px;\r\n\t}\r\n\t.log-detail-right {\r\n\t\tbackground-color: #12b7f5;\r\n\t\tborder-radius: 4px;\r\n\t\tposition: relative;\r\n\t\tmargin-top: 54px;\r\n\t\tmargin-left: 10px;\r\n\t\tpadding: 10px;\r\n\t\tcolor: #FFF;\r\n\t\ttext-align: left;\r\n\t}\r\n\t.log-detail-right::after{\r\n\t\tcontent: '';\r\n\t\tborder-top: 30px solid #12b7f5;\r\n\t\tborder-right: 15px solid transparent;\r\n\t\ttransform: rotate(216deg);\r\n\t\tposition: absolute;\r\n\t\ttop: 0px;\r\n\t\tright: -10px;\r\n\t}\r\n\t.chat-list{\r\n\t\theight: 80%;\r\n\t\toverflow: hidden;\r\n\t\tline-height: 20px;\r\n\t\ttext-align: center;\r\n\t}\r\n\t.chat-text{\r\n\t\theight: 20%;\r\n\t\tbackground-color: #F9FAFD;\r\n\t\tborder-top: 1px solid #dedede;\r\n\t\tposition: relative;\r\n\t}\r\n  .ul-scroll::-webkit-scrollbar {\r\n\twidth: 10px;\r\n\tbackground-color: #f9fafd;\r\n  }\r\n  .ul-scroll::-webkit-scrollbar-thumb {\r\n\tborder-radius: 5px;\r\n\tbackground-color: #e9eef3;\r\n  }\r\n/* .ul-scroll::-webkit-scrollbar-button {\r\n\twidth: 10px;\r\n\tbackground-color: #d3dce6;\r\n\t\r\n  } */\r\n  .ul-scroll::-webkit-scrollbar-track {\r\n\tborder-radius: 5px;\r\n  }\r\n\n</style>\n"],"sourceRoot":"src/components/content/news"}]}