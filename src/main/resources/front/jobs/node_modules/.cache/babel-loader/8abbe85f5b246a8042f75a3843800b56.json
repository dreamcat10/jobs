{"remainingRequest":"D:\\H5\\project\\HBuilderProjects\\jobs\\node_modules\\babel-loader\\lib\\index.js!D:\\H5\\project\\HBuilderProjects\\jobs\\src\\store\\index.js","dependencies":[{"path":"D:\\H5\\project\\HBuilderProjects\\jobs\\src\\store\\index.js","mtime":1675431766660},{"path":"D:\\H5\\project\\HBuilderProjects\\jobs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673771979702},{"path":"D:\\H5\\project\\HBuilderProjects\\jobs\\node_modules\\babel-loader\\lib\\index.js","mtime":1673772004305}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    empInfo: JSON.parse(sessionStorage.getItem(\"empInfo\")),\n    chatRooms: JSON.parse(sessionStorage.getItem(\"chatRooms\")),\n    chatLogs: JSON.parse(sessionStorage.getItem(\"chatLogs\"))\n  },\n  mutations: {\n    SET_USERINFO: function SET_USERINFO(state, empInfo) {\n      state.empInfo = empInfo;\n      sessionStorage.setItem(\"empInfo\", JSON.stringify(empInfo));\n    },\n    REMOVE_INFO: function REMOVE_INFO(state) {\n      state.empInfo = {};\n      sessionStorage.setItem(\"empInfo\", JSON.stringify(''));\n    },\n    SET_CHATROOMS: function SET_CHATROOMS(state, chatRooms) {\n      state.chatRooms = chatRooms;\n      sessionStorage.setItem(\"chatRooms\", JSON.stringify(chatRooms));\n    },\n    SET_CHATLOGS: function SET_CHATLOGS(state, chatLogs) {\n      state.chatLogs = chatLogs;\n      sessionStorage.setItem(\"chatLogs\", JSON.stringify(chatLogs));\n    },\n    SET_CHATLOG: function SET_CHATLOG(state, log, id) {\n      state.chatLogs.forEach(function (item) {\n        if (item.roomId == id) {\n          item.logs.push(log);\n        }\n      });\n      sessionStorage.setItem(\"chatLogs\", JSON.stringify(state.chatLogs));\n    },\n    REMOVE_LOGS: function REMOVE_LOGS(state, id) {\n      state.chatLogs.forEach(function (item) {\n        if (item.roomId == id) {\n          item.logs = [];\n        }\n      });\n      sessionStorage.setItem(\"chatLogs\", JSON.stringify(state.chatLogs));\n    }\n  },\n  getters: {\n    // get\n    getUser: function getUser(state) {\n      return state.empInfo;\n    },\n    getRooms: function getRooms(state) {\n      return state.chatRooms;\n    },\n    getLogs: function getLogs(state) {\n      return state.chatLogs;\n    }\n  },\n  actions: {},\n  modules: {}\n});",{"version":3,"sources":["D:\\H5\\project\\HBuilderProjects\\jobs\\src\\store\\index.js"],"names":["Vue","Vuex","use","Store","state","empInfo","JSON","parse","sessionStorage","getItem","chatRooms","chatLogs","mutations","SET_USERINFO","setItem","stringify","REMOVE_INFO","SET_CHATROOMS","SET_CHATLOGS","SET_CHATLOG","log","id","forEach","item","roomId","logs","push","REMOVE_LOGS","getters","getUser","getRooms","getLogs","actions","modules"],"mappings":"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","sourcesContent":["import Vue from \"vue\"\r\nimport Vuex from \"vuex\"\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    empInfo: JSON.parse(sessionStorage.getItem(\"empInfo\")),\r\n\tchatRooms: JSON.parse(sessionStorage.getItem(\"chatRooms\")),\r\n\tchatLogs: JSON.parse(sessionStorage.getItem(\"chatLogs\")),\r\n  },\r\n  mutations: {\r\n    \r\n    SET_USERINFO: (state, empInfo) => {\r\n      state.empInfo = empInfo\r\n      sessionStorage.setItem(\"empInfo\", JSON.stringify(empInfo))\r\n    },\r\n    REMOVE_INFO: (state) => {\r\n      state.empInfo = {}\r\n      sessionStorage.setItem(\"empInfo\", JSON.stringify(''))\r\n    },\r\n\tSET_CHATROOMS: (state, chatRooms) => {\r\n\t\tstate.chatRooms = chatRooms\r\n\t\tsessionStorage.setItem(\"chatRooms\", JSON.stringify(chatRooms))\r\n\t},\r\n\tSET_CHATLOGS: (state, chatLogs) => {\r\n\t\tstate.chatLogs = chatLogs\r\n\t\tsessionStorage.setItem(\"chatLogs\", JSON.stringify(chatLogs))\r\n\t},\r\n\tSET_CHATLOG: (state, log, id) => {\r\n\t\tstate.chatLogs.forEach(item => {\r\n\t\t\tif(item.roomId == id){\r\n\t\t\t\titem.logs.push(log)\r\n\t\t\t}\r\n\t\t})\r\n\t\tsessionStorage.setItem(\"chatLogs\", JSON.stringify(state.chatLogs))\r\n\t},\r\n\tREMOVE_LOGS: (state, id) => {\r\n\t\tstate.chatLogs.forEach(item => {\r\n\t\t\tif(item.roomId == id){\r\n\t\t\t\titem.logs = []\r\n\t\t\t}\r\n\t\t})\r\n\t\tsessionStorage.setItem(\"chatLogs\", JSON.stringify(state.chatLogs))\r\n\t}\r\n\r\n  },\r\n  getters: {\r\n    // get\r\n    getUser: state => {\r\n      return state.empInfo\r\n    },\r\n\tgetRooms: state => {\r\n\t\treturn state.chatRooms\r\n\t},\r\n\tgetLogs: state => {\r\n\t\treturn state.chatLogs\r\n\t}\r\n\r\n  },\r\n  actions: {\r\n  },\r\n  modules: {\r\n  }\r\n})\r\n"]}]}